plugins {
	id 'java'
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "1.2.1"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

remapJar {
	archiveName "${archivesBaseName}-${project.version}-fabric-${fabric_version}.jar"
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishToModrinth(type: TaskModrinthUpload) { // Make sure it runs after build!
	// Only attempt to run this task if the MODRINTH_TOKEN variable is set, otherwise SKIP it
	onlyIf {
		System.getenv("MODRINTH_TOKEN")
	}

	token = System.getenv("MODRINTH_TOKEN")
	projectId = 'cmvYMLYd'
	versionName = "${project.mod_version}-${minecraft_version}"
	versionNumber = versionName
	uploadFile = remapJar
	addGameVersion(project.minecraft_version)
	addLoader('fabric')
}
